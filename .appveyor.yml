clone_depth: 5

branches:
  except:
  - coverity_scan

version: 1.5.21+build.{build}

cache:
  - C:\cygwin-setup-cache
  - C:\cygwin64-setup-cache

platform:
  - Win32
  - x64

environment:
  matrix:
    - compiler: Cygwin
      configuration: Release
    - compiler: MinGW
      configuration: Release
      build_with: autoconf
      build_with: autoconf
    - compiler: MSVC
      configuration: Release
      build_with: cmake
    - compiler: MSVC
      configuration: Release
      build_with: msbuild
    - compiler: MSVC
      configuration: Release Lib
      build_with: msbuild

matrix:
  exclude:
    - compiler: Cygwin
      build_with: msbuild
    - compiler: Cygwin
      build_with: cmake
    - compiler: Cygwin
      configuration: Release Lib
    - compiler: MinGW
      platform: x64
    - compiler: MinGW
      build_with: msbuild
    - compiler: MinGW
      build_with: cmake
    - compiler: MinGW
      configuration: Release Lib
    - compiler: MSVC
      build_with: autoconf

for:
-
  matrix:
    only:
      - compiler: MSVC

  install:
    - ps: >-
        If ($env:Platform -Match "Win32") {
          $env:HDF5_DIR="C:\projects\HDF5-1.8.13-win32"
          $env:sdk_platform_env="x86"
          If ($env:configuration -Match "Lib") {
            Start-FileDownload 'https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.13/bin/windows/hdf5-1.8.13-win32-VS2010-static.zip'
            7z x -y hdf5-1.8.13-win32-VS2010-static.zip | FIND "ing archive"
          } Else {
            Start-FileDownload 'https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.13/bin/windows/hdf5-1.8.13-win32-VS2010-shared.zip'
            7z x -y hdf5-1.8.13-win32-VS2010-shared.zip | FIND "ing archive"
          }
          7z x -oC:\projects\HDF5-1.8.13-win32 -y hdf5-1.8.13\HDF5-1.8.13-win32.exe | FIND "ing archive"
        } Else {
          $env:HDF5_DIR="C:\projects\HDF5-1.8.13-win64"
          $env:sdk_platform_env="x64"
          If ($env:configuration -Match "Lib") {
            Start-FileDownload 'https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.13/bin/windows/hdf5-1.8.13-win64-VS2010-static.zip'
            7z x -y hdf5-1.8.13-win64-VS2010-static.zip | FIND "ing archive"
          } Else {
            Start-FileDownload 'https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.13/bin/windows/hdf5-1.8.13-win64-VS2010-shared.zip'
            7z x -y hdf5-1.8.13-win64-VS2010-shared.zip | FIND "ing archive"
          }
          7z x -oC:\projects\HDF5-1.8.13-win64 -y hdf5-1.8.13\HDF5-1.8.13-win64.exe | FIND "ing archive"
        }
    - ps: $env:CONFIGURATION_OLD=$env:configuration
    - call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /Release /%sdk_platform_env%
    - ps: $env:configuration=$env:CONFIGURATION_OLD

  before_build:
    - ps: >-
        If ($env:APPVEYOR_JOB_NAME -like "*build_with=cmake*") {
          If ($env:Platform -Match "Win32") {
            cmake -G "Visual Studio 10 2010" . -DCMAKE_PREFIX_PATH="$env:HDF5_DIR"/cmake
          } Else {
            cmake -G "Visual Studio 10 2010 Win64" . -DCMAKE_PREFIX_PATH="$env:HDF5_DIR"/cmake
          }
        }

  build_script:
    - ps: >-
        If ($env:APPVEYOR_JOB_NAME -like "*build_with=cmake*") {
          cmake --build . --config $env:configuration -- /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
        }
        If ($env:APPVEYOR_JOB_NAME -like "*build_with=msbuild*") {
          msbuild visual_studio\matio.sln /verbosity:normal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
        }

-
  matrix:
    only:
      - compiler: Cygwin

  install:
    - ps: Invoke-WebRequest https://cygwin.com/setup-x86.exe -OutFile C:\cygwin-setup-x86.exe
    - ps: Invoke-WebRequest https://cygwin.com/setup-x86_64.exe -OutFile C:\cygwin-setup-x86_x64.exe
    # Win32
    - if "%platform%"=="Win32" set PATH=C:\cygwin\bin;%PATH%
    - if "%platform%"=="Win32" C:\cygwin-setup-x86.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --upgrade-also --only-site --site http://cygwin.mirror.constant.com/ --root C:\cygwin --local-package-dir C:\cygwin-setup-cache --packages libhdf5-devel,zlib-devel
    # x64
    - if "%platform%"=="x64" set PATH=C:\cygwin64\bin;%PATH%
    - if "%platform%"=="x64" C:\cygwin-setup-x86_x64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --upgrade-also --only-site --site http://cygwin.mirror.constant.com/ --root C:\cygwin64 --local-package-dir C:\cygwin64-setup-cache --packages libhdf5-devel,zlib-devel

  before_build:
    - git submodule update --init
    - sh -lc "cd $APPVEYOR_BUILD_FOLDER; ./autogen.sh < /dev/null" autogen.sh
    - sh -lc "cd $APPVEYOR_BUILD_FOLDER; ./configure < /dev/null" configure
    - cat src/matioConfig.h

  build_script:
    - make

  test_script:
    - make check

-
  matrix:
    only:
      - compiler: MinGW

  install:
    - ps: Invoke-WebRequest http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz -OutFile C:\msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz
    - ps: Invoke-WebRequest http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig -OutFile C:\msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig
    # Win32
    - if "%platform%"=="Win32" set PATH=C:\MinGW\bin;C:\MinGW\msys\1.0\bin;%PATH%
    - if "%platform%"=="Win32" mingw-get update
    - if "%platform%"=="Win32" mingw-get install libminizip
    # x64
    - if "%platform%"=="x64" set PATH=C:\msys64\usr\bin;C:\msys64\mingw64\bin;%PATH%
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman-key --verify C:/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman --noconfirm -U C:/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman --noconfirm -U http://repo.msys2.org/msys/x86_64/libzstd-1.4.5-2-x86_64.pkg.tar.xz"
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman --noconfirm -U http://repo.msys2.org/msys/x86_64/zstd-1.4.5-2-x86_64.pkg.tar.xz"
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman --noconfirm -U http://repo.msys2.org/msys/x86_64/pacman-5.2.2-1-x86_64.pkg.tar.xz"
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman --needed --noconfirm -Sy pacman-mirrors"
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman --noconfirm -Sy"
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S automake"
    - if "%platform%"=="x64" C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S zlib-devel"

  before_build:
    - git submodule update --init
    - bash autogen.sh
    - bash configure
    - cat src/matioConfig.h

  build_script:
    - if "%platform%"=="Win32" mingw32-make
    - if "%platform%"=="x64" make

  test_script:
    - if "%platform%"=="x64" make check

test: off

artifacts:
  - path: '**\libmatio.lib'
  - path: '**\libmatio.dll'
  - path: src\.libs\*.a
  - path: src\.libs\*.def
  - path: src\.libs\*.dll
  - path: src\matio_pubconf.h
    name: matio_pubconf.h
  - path: src\matioConfig.h
    name: matioConfig.h
  - path: test\testsuite.log
    name: testsuite.log
