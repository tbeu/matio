# Copyright (C) 2010-2016   Christopher C. Hulbert
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#    1. Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#
#    2. Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY CHRISTOPHER C. HULBERT ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL CHRISTOPHER C. HULBERT OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

AT_SETUP([Write 2D sparse single-precision array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c single write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse 64-bit integer array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $HAVE_INT64 -eq 0])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c int64 write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse 64-bit unsigned integer array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $HAVE_INT64 -eq 0])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c uint64 write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse 32-bit integer array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c int32 write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse 32-bit unsigned integer array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c uint32 write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse 16-bit integer array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c int16 write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse 16-bit unsigned integer array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c uint16 write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse 8-bit integer array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c int8 write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse 8-bit unsigned integer array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c uint8 write_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse.mat sparse_matrix],[0],
         [expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex single-precision array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c single write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-single.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex 64-bit integer complex array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $HAVE_INT64 -eq 0])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c int64 write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex 64-bit unsigned integer complex array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $HAVE_INT64 -eq 0])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c uint64 write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint64.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex 32-bit integer complex array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c int32 write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex 32-bit unsigned integer complex array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c uint32 write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint32.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex 16-bit integer complex array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c int16 write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex 16-bit unsigned integer complex array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c uint16 write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint16.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex 8-bit integer complex array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c int8 write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-int8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP

AT_SETUP([Write 2D sparse complex 8-bit unsigned integer complex array])
AT_SKIP_IF([test $EXTENDED_SPARSE -ne 1])
AT_SKIP_IF([test $COMPRESSION_ZLIB -ne 1])
AT_CHECK([$builddir/test_mat -v 5 -z -c uint8 write_complex_sparse],[0],
         [],[])
AT_CHECK([cp $srcdir/results/readvar-write_complex_sparse-sparse_matrix-uint8.out expout
          $builddir/test_mat readvar test_write_sparse_complex.mat sparse_matrix],
         [0],[expout],[])
AT_CLEANUP
